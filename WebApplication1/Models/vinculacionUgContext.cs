// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace WebApplication1.Models
{
    public partial class vinculacionUgContext : DbContext
    {
        public vinculacionUgContext()
        {
        }

        public vinculacionUgContext(DbContextOptions<vinculacionUgContext> options)
            : base(options)
        {
        }

        public virtual DbSet<ActividadImagen> ActividadImagen { get; set; }
        public virtual DbSet<Alumno> Alumno { get; set; }
        public virtual DbSet<AsignModUser> AsignModUser { get; set; }
        public virtual DbSet<Auditoria> Auditoria { get; set; }
        public virtual DbSet<BeneficiariosVinculacion> BeneficiariosVinculacion { get; set; }
        public virtual DbSet<ConfDom> ConfDom { get; set; }
        public virtual DbSet<ConvenioEspecifico> ConvenioEspecifico { get; set; }
        public virtual DbSet<ConvenioMarco> ConvenioMarco { get; set; }
        public virtual DbSet<FileApp> FileApp { get; set; }
        public virtual DbSet<GenerarProyecto> GenerarProyecto { get; set; }
        public virtual DbSet<GrupoEstudiante> GrupoEstudiante { get; set; }
        public virtual DbSet<Imagen> Imagen { get; set; }
        public virtual DbSet<Instituto> Instituto { get; set; }
        public virtual DbSet<MaestroInstitucion> MaestroInstitucion { get; set; }
        public virtual DbSet<MasterTable> MasterTable { get; set; }
        public virtual DbSet<ModuleMobile> ModuleMobile { get; set; }
        public virtual DbSet<Modulo> Modulo { get; set; }
        public virtual DbSet<PersonalVinculacion> PersonalVinculacion { get; set; }
        public virtual DbSet<Procesos> Procesos { get; set; }
        public virtual DbSet<RegistroActividad> RegistroActividad { get; set; }
        public virtual DbSet<VinculacionConfig> VinculacionConfig { get; set; }
        public virtual DbSet<WebUser> WebUser { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ActividadImagen>(entity =>
            {
                entity.ToTable("actividadImagen");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Ccia)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("ccia");

                entity.Property(e => e.CodEntidad)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("codEntidad");

                entity.Property(e => e.CodRegistroActividad)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("codRegistroActividad");

                entity.Property(e => e.Detalle)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("detalle");

                entity.Property(e => e.FecCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("fecCrea")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdGrupo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idGrupo");

                entity.Property(e => e.IdProyecto)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idProyecto");

                entity.Property(e => e.Imagen)
                    .IsUnicode(false)
                    .HasColumnName("imagen");
            });

            modelBuilder.Entity<Alumno>(entity =>
            {
                entity.HasKey(e => e.CodAlumno);

                entity.ToTable("alumno");

                entity.Property(e => e.CodAlumno)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("codAlumno");

                entity.Property(e => e.AlumnoNombre)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("alumnoNombre");

                entity.Property(e => e.Capacidades)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("capacidades");

                entity.Property(e => e.Cedula)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cedula");

                entity.Property(e => e.CodCarrera)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("codCarrera");

                entity.Property(e => e.CodCia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("codCia");

                entity.Property(e => e.CodCurso)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("codCurso")
                    .IsFixedLength();

                entity.Property(e => e.CodFacultad)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("codFacultad");

                entity.Property(e => e.CodSexo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("codSexo");

                entity.Property(e => e.CorreoInstitucional)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("correoInstitucional");

                entity.Property(e => e.CorreoPersonal)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("correoPersonal");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("direccion");

                entity.Property(e => e.Edad).HasColumnName("edad");

                entity.Property(e => e.FechaCreacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("fechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaMod)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("fechaMod");

                entity.Property(e => e.IdCanton)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("idCanton");

                entity.Property(e => e.IdProvincia)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("idProvincia");

                entity.Property(e => e.SemestreNivel)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("semestreNivel");

                entity.Property(e => e.TelefonoCasa)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("telefonoCasa");

                entity.Property(e => e.TelefonoCelular)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("telefonoCelular");
            });

            modelBuilder.Entity<AsignModUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("asignModUser");

                entity.Property(e => e.CodCia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cod_cia");

                entity.Property(e => e.CodMod)
                    .HasMaxLength(5)
                    .HasColumnName("cod_mod");

                entity.Property(e => e.CodUser)
                    .HasMaxLength(30)
                    .HasColumnName("cod_user");

                entity.Property(e => e.State).HasColumnName("state");
            });

            modelBuilder.Entity<Auditoria>(entity =>
            {
                entity.HasKey(e => e.CodAuditoria);

                entity.Property(e => e.CodAuditoria)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cod_auditoria");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("descripcion");

                entity.Property(e => e.FecAudit)
                    .HasColumnType("datetime")
                    .HasColumnName("fecAudit")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdInstituto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("idInstituto");

                entity.Property(e => e.IdUser)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("idUser");

                entity.Property(e => e.Titulo)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("titulo");
            });

            modelBuilder.Entity<BeneficiariosVinculacion>(entity =>
            {
                entity.HasKey(e => e.CedBeneficiario);

                entity.ToTable("beneficiariosVinculacion");

                entity.Property(e => e.CedBeneficiario)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cedBeneficiario");

                entity.Property(e => e.Ccia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ccia");

                entity.Property(e => e.CedRepresentante)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cedRepresentante");

                entity.Property(e => e.CedulaBeneficiario)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cedulaBeneficiario");

                entity.Property(e => e.CodDay1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("codDay1");

                entity.Property(e => e.CodDay2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("codDay2");

                entity.Property(e => e.CodSexo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("codSexo");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("direccion");

                entity.Property(e => e.Edad).HasColumnName("edad");

                entity.Property(e => e.Email)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.IdCanton)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("idCanton");

                entity.Property(e => e.IdJornada)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("idJornada");

                entity.Property(e => e.IdProcesos)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idProcesos");

                entity.Property(e => e.IdProyecto)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idProyecto");

                entity.Property(e => e.IdUserRegister)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("idUserRegister");

                entity.Property(e => e.InstitucionNombre)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("institucionNombre");

                entity.Property(e => e.NombreBeneficiario)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("nombreBeneficiario");

                entity.Property(e => e.TelfCelular)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("telfCelular");

                entity.Property(e => e.Tema1)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tema_1");

                entity.Property(e => e.Tema2)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tema_2");

                entity.Property(e => e.Tema3)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tema_3");
            });

            modelBuilder.Entity<ConfDom>(entity =>
            {
                entity.ToTable("confDom");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Disabled).HasColumnName("disabled");

                entity.Property(e => e.ObjecDom)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("objecDom");

                entity.Property(e => e.Show).HasColumnName("show");

                entity.Property(e => e.Tiempo).HasColumnName("tiempo");

                entity.Property(e => e.UserCod)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("userCod");
            });

            modelBuilder.Entity<ConvenioEspecifico>(entity =>
            {
                entity.HasKey(e => e.CodConvenioEsp);

                entity.ToTable("convenioEspecifico");

                entity.Property(e => e.CodConvenioEsp)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("codConvenioEsp");

                entity.Property(e => e.CodConvenioMarco)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("codConvenioMarco");

                entity.Property(e => e.FechModif)
                    .HasColumnType("datetime")
                    .HasColumnName("fechModif")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Ffin)
                    .HasColumnType("datetime")
                    .HasColumnName("ffin");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.IdEstado)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("idEstado")
                    .IsFixedLength();

                entity.Property(e => e.NombreConvenio)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("nombreConvenio");

                entity.Property(e => e.NombreInstitucionConvenio)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("nombreInstitucionConvenio");
            });

            modelBuilder.Entity<ConvenioMarco>(entity =>
            {
                entity.HasKey(e => e.CodConvenioMarco);

                entity.ToTable("convenioMarco");

                entity.Property(e => e.CodConvenioMarco)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("codConvenioMarco");

                entity.Property(e => e.Fachafin)
                    .HasColumnType("datetime")
                    .HasColumnName("fachafin");

                entity.Property(e => e.FechModif)
                    .HasColumnType("datetime")
                    .HasColumnName("fechModif")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FechaIni)
                    .HasColumnType("datetime")
                    .HasColumnName("fechaIni");

                entity.Property(e => e.IdCia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("idCia");

                entity.Property(e => e.IdEstado)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("idEstado")
                    .IsFixedLength();

                entity.Property(e => e.IdentificadorUnicoUniversidad)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("identificadorUnicoUniversidad");

                entity.Property(e => e.NombreConvenio)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("nombreConvenio");

                entity.Property(e => e.NombreConvenioIntitu)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("nombreConvenioIntitu");

                entity.Property(e => e.RepresentanteConvenioI)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("representanteConvenioI");

                entity.Property(e => e.RepresentanteConvenioU)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("representanteConvenioU");
            });

            modelBuilder.Entity<FileApp>(entity =>
            {
                entity.ToTable("fileApp");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("descripcion");

                entity.Property(e => e.Ruta)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ruta");
            });

            modelBuilder.Entity<GenerarProyecto>(entity =>
            {
                entity.HasKey(e => e.IdProyecto);

                entity.ToTable("generarProyecto");

                entity.Property(e => e.IdProyecto)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idProyecto");

                entity.Property(e => e.Alias)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("alias");

                entity.Property(e => e.AreaDesarrollo)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("areaDesarrollo");

                entity.Property(e => e.DescripcionProyecto)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("descripcionProyecto");

                entity.Property(e => e.DirectorProyecto)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("directorProyecto");

                entity.Property(e => e.Ffin)
                    .HasColumnType("datetime")
                    .HasColumnName("ffin");

                entity.Property(e => e.Finicio)
                    .HasColumnType("datetime")
                    .HasColumnName("finicio");

                entity.Property(e => e.Horas).HasColumnName("horas");

                entity.Property(e => e.IdTutor)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("idTutor");

                entity.Property(e => e.NombreProyecto)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("nombreProyecto");

                entity.Property(e => e.ProyectoProveniente)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("proyectoProveniente");
            });

            modelBuilder.Entity<GrupoEstudiante>(entity =>
            {
                entity.ToTable("grupoEstudiante");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CodGrupo)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("codGrupo");

                entity.Property(e => e.Codcia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("codcia");

                entity.Property(e => e.FecCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("fecCrea")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdEstudiante)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idEstudiante");

                entity.Property(e => e.NombreGrupo)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("nombreGrupo");
            });

            modelBuilder.Entity<Imagen>(entity =>
            {
                entity.HasKey(e => e.IdImagen);

                entity.Property(e => e.IdImagen)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idImagen");

                entity.Property(e => e.ImagenContent).HasColumnName("imagenContent");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("tipo");
            });

            modelBuilder.Entity<Instituto>(entity =>
            {
                entity.HasKey(e => e.Codcia);

                entity.ToTable("instituto");

                entity.Property(e => e.Codcia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("codcia");

                entity.Property(e => e.Correo)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("correo");

                entity.Property(e => e.Cta1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("cta1");

                entity.Property(e => e.Cta2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("cta2");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(300)
                    .IsUnicode(false)
                    .HasColumnName("descripcion");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("direccion");

                entity.Property(e => e.Email1)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("email1");

                entity.Property(e => e.Email2)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("email2");

                entity.Property(e => e.FecCrea)
                    .HasColumnType("datetime")
                    .HasColumnName("fecCrea");

                entity.Property(e => e.HorasVinc).HasColumnName("horasVinc");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("nombre");

                entity.Property(e => e.Ruc)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("ruc");

                entity.Property(e => e.TelefA).HasColumnName("telef_a");

                entity.Property(e => e.TelfB).HasColumnName("telf_b");

                entity.Property(e => e.TelfC).HasColumnName("telf_c");

                entity.Property(e => e.Web)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("web");
            });

            modelBuilder.Entity<MaestroInstitucion>(entity =>
            {
                entity.HasKey(e => e.CodInstiProy);

                entity.ToTable("maestroInstitucion");

                entity.Property(e => e.CodInstiProy)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("codInstiProy");

                entity.Property(e => e.Alias)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("alias");

                entity.Property(e => e.Codcia)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("codcia");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("direccion");

                entity.Property(e => e.Email)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.IdCanton)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idCanton");

                entity.Property(e => e.IdProvincia)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idProvincia");

                entity.Property(e => e.NombreInstituto)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("nombreInstituto");

                entity.Property(e => e.Telefono)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("telefono");

                entity.Property(e => e.TelefonoCelular)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("telefonoCelular");

                entity.Property(e => e.TipoInsti)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tipoInsti")
                    .IsFixedLength();
            });

            modelBuilder.Entity<MasterTable>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Campo1)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("campo1")
                    .IsFixedLength();

                entity.Property(e => e.Campo2)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("campo2")
                    .IsFixedLength();

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("codigo")
                    .IsFixedLength();

                entity.Property(e => e.Gestion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("gestion")
                    .HasDefaultValueSql("('')")
                    .IsFixedLength();

                entity.Property(e => e.Grupo)
                    .HasMaxLength(70)
                    .HasColumnName("grupo");

                entity.Property(e => e.Lencod)
                    .HasColumnType("decimal(2, 0)")
                    .HasColumnName("lencod");

                entity.Property(e => e.Master)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("master")
                    .IsFixedLength();

                entity.Property(e => e.Nombre)
                    .HasMaxLength(200)
                    .HasColumnName("nombre");

                entity.Property(e => e.Nomtag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("nomtag")
                    .HasDefaultValueSql("(' ')")
                    .IsFixedLength();

                entity.Property(e => e.Pideval).HasColumnName("pideval");

                entity.Property(e => e.Sgrupo)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("sgrupo")
                    .IsFixedLength();

                entity.Property(e => e.Valor)
                    .HasColumnType("decimal(15, 2)")
                    .HasColumnName("valor")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Valor2)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("VALOR2");
            });

            modelBuilder.Entity<ModuleMobile>(entity =>
            {
                entity.ToTable("module_mobile");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Codec)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("codec");

                entity.Property(e => e.Color)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("color");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("descripcion");

                entity.Property(e => e.Icon)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("icon");

                entity.Property(e => e.Nombre)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("nombre");
            });

            modelBuilder.Entity<Modulo>(entity =>
            {
                entity.ToTable("modulo");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Color)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("color");

                entity.Property(e => e.Icon)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("icon");

                entity.Property(e => e.ModuleDescription)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("moduleDescription");

                entity.Property(e => e.ModuleName)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("moduleName");
            });

            modelBuilder.Entity<PersonalVinculacion>(entity =>
            {
                entity.HasKey(e => e.CodPersonal)
                    .HasName("PK_personal_vinculacion");

                entity.ToTable("personalVinculacion");

                entity.Property(e => e.CodPersonal)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("codPersonal");

                entity.Property(e => e.Cedula)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("cedula");

                entity.Property(e => e.CodCarrera)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("codCarrera");

                entity.Property(e => e.CodFacultad)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("codFacultad");

                entity.Property(e => e.CodSexo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("codSexo");

                entity.Property(e => e.Codcia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("codcia");

                entity.Property(e => e.CorreoInstitucional)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("correoInstitucional");

                entity.Property(e => e.CorreoPersonal)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("correoPersonal");

                entity.Property(e => e.Direccion)
                    .HasMaxLength(500)
                    .IsUnicode(false)
                    .HasColumnName("direccion");

                entity.Property(e => e.Edad).HasColumnName("edad");

                entity.Property(e => e.FechaCreacion)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("fechaCreacion");

                entity.Property(e => e.FechaMod)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("fechaMod");

                entity.Property(e => e.IdCanton)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("idCanton");

                entity.Property(e => e.IdInstituto)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idInstituto");

                entity.Property(e => e.IdProvincia)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("idProvincia");

                entity.Property(e => e.PersonaNombre)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("personaNombre");

                entity.Property(e => e.SemestreNivel)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("semestreNivel");

                entity.Property(e => e.TelefonoCasa)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("telefonoCasa");

                entity.Property(e => e.TelefonoCelular)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("telefonoCelular");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("tipo");
            });

            modelBuilder.Entity<Procesos>(entity =>
            {
                entity.HasKey(e => e.IdProcesos);

                entity.ToTable("procesos");

                entity.Property(e => e.IdProcesos)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idProcesos");

                entity.Property(e => e.FecFin)
                    .HasColumnType("datetime")
                    .HasColumnName("fecFin");

                entity.Property(e => e.FecInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("fecInicio");

                entity.Property(e => e.FeccreaProceso)
                    .HasColumnType("datetime")
                    .HasColumnName("feccreaProceso")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Horas).HasColumnName("horas");

                entity.Property(e => e.IdAlumno)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idAlumno");

                entity.Property(e => e.IdCoordinadorGeneral)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idCoordinadorGeneral");

                entity.Property(e => e.IdDecanoVinculacion)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idDecanoVinculacion");

                entity.Property(e => e.IdProyecto)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idProyecto");

                entity.Property(e => e.IdTutorVinculacion)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idTutorVinculacion");

                entity.Property(e => e.Idcia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("idcia");

                entity.Property(e => e.NumeroProceso)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("numeroProceso");
            });

            modelBuilder.Entity<RegistroActividad>(entity =>
            {
                entity.HasKey(e => e.CodRegActivity);

                entity.ToTable("registroActividad");

                entity.Property(e => e.CodRegActivity)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("codRegActivity");

                entity.Property(e => e.Ccia)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ccia");

                entity.Property(e => e.DescriptionActivity)
                    .HasMaxLength(600)
                    .IsUnicode(false)
                    .HasColumnName("descriptionActivity");

                entity.Property(e => e.FecCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("fecCreacion");

                entity.Property(e => e.HoraFin).HasColumnName("hora_fin");

                entity.Property(e => e.HoraIni).HasColumnName("hora_ini");

                entity.Property(e => e.Horas).HasColumnName("horas");

                entity.Property(e => e.IdGrupo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idGrupo");

                entity.Property(e => e.IdProceso)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idProceso");

                entity.Property(e => e.IdProyecto)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idProyecto");

                entity.Property(e => e.IdUser)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("idUser");

                entity.Property(e => e.NombreActivity)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("nombreActivity");

                entity.Property(e => e.Observaciones)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("observaciones");
            });

            modelBuilder.Entity<VinculacionConfig>(entity =>
            {
                entity.ToTable("vinculacion_config");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CodAdmin)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cod_admin");

                entity.Property(e => e.CodGrupo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cod_grupo");

                entity.Property(e => e.CodProceso)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cod_proceso");

                entity.Property(e => e.Codcia)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("codcia");

                entity.Property(e => e.FechaFin)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_fin");

                entity.Property(e => e.FechaInicio)
                    .HasColumnType("datetime")
                    .HasColumnName("fecha_inicio");

                entity.Property(e => e.InscriVin).HasColumnName("inscri_vin");

                entity.Property(e => e.NombreInscrip)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("nombre_inscrip");
            });

            modelBuilder.Entity<WebUser>(entity =>
            {
                entity.HasKey(e => e.UserCod);

                entity.ToTable("webUser");

                entity.Property(e => e.UserCod)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("userCod");

                entity.Property(e => e.Email)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.NombreEntidad)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("nombreEntidad");

                entity.Property(e => e.Password)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("password");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tipo");

                entity.Property(e => e.Username)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("username");
            });

            OnModelCreatingGeneratedProcedures(modelBuilder);
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}